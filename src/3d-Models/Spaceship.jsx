/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 spaceship.gltf --transform 
Files: spaceship.gltf [27.06MB] > C:\Users\mohan\Downloads\spaceship\spaceship-transformed.glb [1.15MB] (96%)
Author: Chris3dblender (https://sketchfab.com/chris3dblender)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/spaceship-8d2df5c405a243f38734eab146100047
Title: Spaceship
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export default function Model(props) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("/spaceship-transformed.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const actionNames = Object.keys(actions);
    if (actionNames.length > 0) {
      actions[actionNames[0]].play();
    }
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene" position={[6, 2, -1]} scale={0.004}>
        <primitive object={nodes._rootJoint} />
        <skinnedMesh
          name="Object_31"
          geometry={nodes.Object_31.geometry}
          material={materials.Ship}
          skeleton={nodes.Object_31.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <skinnedMesh
          name="Object_33"
          geometry={nodes.Object_33.geometry}
          material={materials.Aros}
          skeleton={nodes.Object_33.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <skinnedMesh
          name="Object_34"
          geometry={nodes.Object_34.geometry}
          material={materials.Weapon}
          skeleton={nodes.Object_34.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/spaceship-transformed.glb");
